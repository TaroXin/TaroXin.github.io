<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[《天才在左，疯子在右》之中的我，密闭空间]]></title>
    <url>%2Fessay%2F%E3%80%8A%E5%A4%A9%E6%89%8D%E5%9C%A8%E5%B7%A6%EF%BC%8C%E7%96%AF%E5%AD%90%E5%9C%A8%E5%8F%B3%E3%80%8B%E4%B9%8B%E4%B8%AD%E7%9A%84%E6%88%91%2F</url>
    <content type="text"><![CDATA[情景介绍: 文中的“我”指的是笔者，文中的“他”则是指《天才在左，疯子在右》的作者，读完此书以后，也确实引起了很多的共鸣，试问谁能没有一点奇怪的想法呢，笔者在本文中将从“精神病人”的角度，也就是笔者自己的角度，去和此书的作者进行一次谈话，释放、吐露、勾勒出那个笔者心中的我 正文门悄无声息的打开了，那个一直只存在于别人言语之间他出现在我面前，一个所谓的精神病人面前，和我想象的不太一样，他着着一身正装，不带眼镜，身材壮硕，孔武有力，手里面是那个标志般的笔记本与录音笔，他慢慢走过来坐在我面前的椅子上，看的出来他有点不太自然，或者说……紧张。 毕竟，一个正常的人是没办法面对一个不正常的人的，即使我的表现与气质是如此普通。 我向着他笑了笑，他似乎总是在躲闪我的视线，或许，人总是不敢去亲眼面对未知与诡异吧，虽然我自己不觉得有什么差别。 咔~，那是录音笔的声音。 他：“听说你是自愿进精神病院的？” 我：“自愿与不自愿，从来都不是我能决定的。” 他：“不是你能决定的？” 我：“总是有人在安排我做着某些事情，比如，进来这个鬼地方，又比如，见到你。” 他：“你是觉得有人在控制你吗？” 我：“你相信你的大脑吗？” 他：“严谨的来讲，大脑的想法是由我主动思索，不存在相信与不相信。” 我轻轻的笑了笑，不知道为什么，连我自己也不懂为什么要笑，连我自己都觉得现在的反应很诡异。 我：“你的大脑是你身上最聪明的器官，这个结论是谁告诉你的？” 他：“大脑是人体占比最多的器官，并且具有很复杂的神经网络，虽然目前为止人脑研究远远达不到先进的水平，但是也可以证明大自然界中人脑是最聪明的了。” 我：“不是，这个结论并不是谁证明出来，或者是哪位告诉你的，而是你自己本身就知晓的，从出生下来的那一刻起，自己仿佛就知道了这个结论，而那个时候，没有人告诉你这些。” 他……似乎有点困惑：“你能说说你具体的想法吗？” 我知道了他也是那种会去质疑这个世界的人，不然他只会对科学深信不疑。 我：“根据现在所知晓的，大脑是人体最重要的器官，也是人思考与记忆所在之地，人的一切行动全都是被大脑指挥的，左脑控制右半边身体，右脑控制左半边身体，而他们，只需要控制大脑就可以了。” 他：“他们是指谁？” 我：“控制我们的人，控制地球上每一个人的高等动物，我们是被圈养的，就像上古时期的恐龙一样，都是被他们圈养的，他们的思维不是我们能参透的。” 我：“从刚出生的那一刻起，我们每个人都被印上了标签，他们会告诉我们，大脑是人体最重要的器官，你的一切行动都要听从大脑的指挥，而他们的每一个命令，都会通过大脑传达给你，而你却天真的以为，这是我自己思考而得到的。” 他：“难以想象” 虽然他没有直接说出来，但是我知道，他也在思考这个问题了，遇到可以和自己一样质疑世界的人，不自觉的有点让我兴奋了起来。 我：“想象？那只是他们赋予我们最基本的功能之一，让我自以为是一个独立的个体，可是想象却从来没有脱离过认知，不是吗？所有的想象产物都一定有他的参考物，包括中国的传说：龙，没见过的东西，你是没办法想象出来的，限制，你没有感觉出来吗，可是为什么会有这种限制呢？可能是因为没有限制就没有底线吧，他们不想让我们突破他们的底线，如果突破了，就会像以前的物种一样，灭绝…” 他：“你是指恐龙时代吗？” 我：“对，假设恐龙时代他们的设计还不够完善，恐龙文明已经超越现在文明的情况，恐龙们已经了解到了一些东西，一些触及他们底线的东西，尽管代价是全部死亡。” 他：“你所指的这些结论都是不成立的，恐龙灭绝的原因虽然至今没有完全研发出来，但是却和你所说的差异很大，我们生活在地球，但是却没有反抗大自然的能力的。还有，你所指的恐龙文明，他们的脑力不如人体，几乎不可能产生高等文明。” 我：“恐龙在地球生活多少年？一亿五千万年，恐怖的数字，建立在时间的基础上，不可能没有高等文明存在，而我相信，当今社会的某些人已经知道了这些结论，只是没有人去说，没有人讨论，仅仅是害怕，怕的是恐龙灭绝的真相，怕的是上面的那群人。他们几乎全权控制着地球上的一切，一念之间，万物生或者死，一芥之间，宇宙存或者灭。我时常去看那些所谓的地球的图片，太阳系的图片，银河的图片，多么绚丽与浩瀚，是我们人类看到了我们希望看到的，还是他们让我们看到了他们希望被我们看到的。” 我：“曾经的我无比相信科学，直到有一天偶然间在观察我家的鱼缸时，里面的鱼儿欢快的游来游去，鱼儿也会偶尔碰触到外层的玻璃，但是鱼儿并没有尝试穿过玻璃去外面的世界，或许尝试了，只是没成功，每天吃着从天而降的鱼食，或许还在怀着大自然赐给自己食物的感恩，孰不知，它们只是被圈养的而已，鱼儿以为这里是自己的世界，孰不知，有一个又一个比它们强大的人类在观察它们，鱼儿以为玻璃外的世界就是广阔无垠的宇宙，孰不知，这里仅仅是我们的宇宙的尘埃一角，而圈养它们的人，它们永远都无法理解。” 我清了清嗓子：“从那以后，我就知道了，我们其实也是被圈养的，不过只是我们自己不明真相而已，去探索所得到的，也仅仅是他们希望我们看到的，我们的宇宙，是不是真正的宇宙中的尘埃一角？抬着头望着星空，思考着，宇宙的意义。有时候我自己都很可笑，为什么我会去想这些，为什么我非要去探究这些事情的真相，好好活在当下不好吗？做一个普通人，目标就是比其他普通人更优秀一点，这原本就是我的最大理想了，可是现在竟然是探索宇宙。可笑，可笑…” 我咬着有点干枯的嘴唇，质疑的目光远远的与他的目光相接，尽管他不承认，也不会承认，我知道他相信了一点就够了。 他：“我觉得你不适合在这里，你只是一个普通人，只是想法有点奇怪罢了。” 我：“不，想法是他们给我的，思考的结果也是他们给的，他们无所不能。” 他：“你很质疑人的自由意志，你很想去探索，可是你知道的，你没有任何证据，只有凭空想象。” 我：“是啊，我没有证据，尽管我努力想得到证据，但是这不是我的能力可以实现的，就像鱼儿一样，不可能通过自己的力量冲破玻璃的，哪怕所有的鱼儿同心协力，也不可能。谢谢你今天能来，也谢谢你的倾听。” 我合上了眼睛，静静的听着他离去，静静的享受这密闭空间中的安逸，是墙阻止我去探索外面的世界，而我却没办法打破墙。 我相信自由意志，正因为相信，所以无法想象如果真的有一群人在看着我们生活的一切的样子，相信不代表是事实，科学不能证明所有，在没有证明以前，不要说任何东西不存在。就像几百年前无法想象现在的电脑和科技一样，时间会证明那些不存在的，不科学的，不唯物的事情。 人工智能，人类在极力的制造着类似于自己的存在，人类在极力复制自己的大脑。 几天以后，我从那鬼地方出来了，来到一个熙熙攘攘的人群，望着这一切，这些都不是我在那个密闭的空间里能想象到的，直到真正的看到。]]></content>
      <categories>
        <category>essay</category>
      </categories>
      <tags>
        <tag>随笔</tag>
        <tag>读后感</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Android进程间通信新姿势HermesEventBus]]></title>
    <url>%2FAndroid%2FAndroid%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1%E6%96%B0%E5%A7%BF%E5%8A%BFHermesEventBus%2F</url>
    <content type="text"><![CDATA[先上一波效果图吸引注意力友情提示： GIF 1.54M 小心流量乱跑哦！ 效果图还不够？ 拜访 HermesEventBus Demo HermesEventBusDemo What is EventBus相信开发 Android 的伙伴们应该对 EventBus 耳熟能详了，EventBus 是一款在 Android 平台发布的 发布/订阅 事件总线，主要用来替代 Intent，Handler，Broadcast 在 Fragment，Activity，Service，线程之间传递消息，简化各组件之间的通讯，优点开销小，代码优雅，能够很好的解耦业务与界面交互，缺点是很容易混淆程序逻辑，而且无法进程间通信 What is HermesEventBusHermesEventBus 拥有 EventBus 全部的作用和相同的 API (内部依赖EventBus) ，其主要作用就是我们今天要谈谈的基于 EventBus 的进程间通信，由 『热的饿了么』开源，不明觉厉 - - How to use it like EventBus (EventBus 般使用姿势)新建 Main app， 在 build.gradle(Module: app) 添加 HermesEventBus 依赖1234dependencies &#123; // 添加 HermesEventBus 依赖 compile &apos;xiaofei.library:hermes-eventbus:0.3.0&apos;&#125; 然后就可以像你使用 EventBus 一样使用 HermesEventBus 了 首先你需要一个这样的布局 一个 Button 用于跳转到 NextActivity，一个 TextView 用于接收返回消息，So easy，这样的简单布局蟹棒相信年轻司机们心领神会 新建 NextActivity，布局内仅有一个 Button 用于发送事件 点击 Button 触发 sendMessage 事件 这样就使用 HermesEventBus 发送了一个消息，也是相当于使用 EventBus，无非在使用 EventBus 时 HermesEventBus.getDefault() 被替换成了 EventBus.getDefault() 方法 当然需要接收到消息，我们还得在 MainActivity 注册 HermesEventBus 接收者 代码一目了然，onCreate 里面注册，onDestory 里面注销，使用 Subscript 注解注册接收者，指定 ThreadMode 在 UI 线程运行，这样就完成了 HermesEventBus 的 Like EventBus 看不懂以上部分的年轻司机蟹棒建议先了解 EventBus3.0 的使用姿势 How to use HermesEventBus上面蟹棒带领年轻司机们了解了 HermesEventBus 同一个 APP 的通信技巧，接下来的重头戏，进程间通信，Look 向 MainActivity 的布局中再次添加一个 Button 触发 sendEventToChildApp 方法 发送消息的方法和我们上面使用 HermesEventBus 发送消息的方法一致，接下来创建 MyApplication 类继承自 Application，在 onCreate 中调用如下方法 在 Main App 的 Manifest 文件中注册 MyApplication，并注册如下 service 123&lt;service android:name=&quot;xiaofei.library.hermes.HermesService$HermesService0&quot; android:exported=&quot;true&quot;/&gt; 新建我们的第二个 APP，这里姑且叫 Plugin APP，AndroidStudio 右键项目 new &gt; module PluginAPP 的 build.gradle 中同样需要依赖 HermesEventBus1234dependencies &#123; // 添加 HermesEventBus 依赖 compile &apos;xiaofei.library:hermes-eventbus:0.3.0&apos;&#125; 在 Plugin APP 中创建 MyApplication 继承自 Application，onCreate 方法中执行如下代码 Plugin APP 的 MainActivity 布局如下 同样的我们需要在 PluginAPP 中的 MainActivity 中注册接收者，与正常 HermesEventBus 注册一般无二 完成了，是不是没有想象中的复杂，只要懂得使用 EventBus ，使用 HermesEventBus 很简单 注意点目前为止，我们拥有 MainApp 与 PluginApp 两个 App，并且正常注册了接收者与发布者，正常的实现了进程间通讯，但是这里有需要注意的一点，在 MainApp / MainActivity 执行的 post 方法 内部参数是 MessageEvent，同样的 PluginApp / MainActivity 中接收的参数也是 MessageEvent ，这两个 MessageEvent 唯一的不同点是存在于两个不同的 APP 中，其他的类名，包名，方法名全部要一致才可以正常调用，另外在 APP 混淆时务必将这两个类 Keep 总结HermesEventBus 的使用姿势与 EventBus 的使用姿势相差无几，不过在 EventBus 的基础上多出了进程间通讯的功能，回想我们之前是如何实现进程间通讯的 全局Broadcast，Content Provider，AIDL Service 等，HermesEventBus 提供了更加便利的方式，蟹棒也带领大家 Get 到一个进程间通信的新姿势！看完不点个喜欢吗？]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
</search>
